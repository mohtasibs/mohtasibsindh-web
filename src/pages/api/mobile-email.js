import nodemailer from 'nodemailer';

// Your provided API key
const API_KEY = 'a4b7f20f6bcd914d0f85099';

export default async function handler(req, res) {
    if (req.method !== 'POST') {
        return res.status(405).json({ message: 'Only POST requests are allowed' });
    }

    // Authenticate the request using the API key
    if (req.headers['x-api-key'] !== API_KEY) {
        return res.status(403).json({ message: 'Unauthorized: Invalid API key' });
    }

    try {
        const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.EMAIL_USER, // Your Gmail address
                pass: process.env.EMAIL_PASS, // Your App Password
            },
        });

        const emailContent = JSON.stringify(req.body, null, 2); // Convert incoming data to readable JSON

        const mailOptions = {
            from: `"Mobile App Complaint" <${process.env.EMAIL_USER}>`, // Sender's name
            to: 'sindhmohtasib@gmail.com', // Recipient
            subject: 'New Complaint Received', // Email subject
            text: `Complaint Details:\n\n${emailContent}`, // Plain text for fallback
            html: `
                <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <h2 style="color: #007BFF;">New Complaint Received</h2>
                    <pre style="background: #f4f4f4; padding: 10px; border-radius: 5px;">${emailContent}</pre>
                    <footer style="margin-top: 20px; font-size: 0.9em; color: #555;">
                        <hr style="border: none; border-top: 1px solid #ddd;" />
                        <p>This email was automatically generated by <strong>Mohtasib Sindh</strong>. Please do not reply.</p>
                    </footer>
                </div>
            `,
        };

        await transporter.sendMail(mailOptions);

        res.status(200).json({ message: 'Email sent successfully!' });
    } catch (error) {
        console.error('Error sending email:', error);
        res.status(500).json({ message: 'Failed to send email', error: error.message });
    }
}
